name: Build GNU toolchain

on:
    workflow_dispatch:
        inputs:
            target:
                description: Target platform
                required: true
                default: 'i686-elf'
            binutils_version:
                description: GNU Binutils version
                required: true
                default: '2.41'
            gcc_version:
                description: GCC version
                required: true
                default: '13.2.0'
            gdb_version:
                description: GDB version
                required: true
                default: '14.1'

permissions:
    contents: write
    packages: write

jobs:
    build:
        runs-on: ubuntu-latest
        
        env:
            TARGET: '${{ github.event.inputs.target }}'
            BINUTILS_VERSION: '${{ github.event.inputs.binutils_version }}'
            GCC_VERSION: '${{ github.event.inputs.gcc_version }}'
            GDB_VERSION: '${{ github.event.inputs.gdb_version }}'
            ARTIFACT: '${{ github.event.inputs.target }}-gcc${{ github.event.inputs.gcc_version }}-gdb${{ github.event.inputs.gdb_version }}'

        steps:
        -   name: Install prerequisites
            run: |
                sudo apt install -y build-essential bison flex texinfo libgmp3-dev libmpc-dev libmpfr-dev libisl-dev
        -   name: Download source code
            run: |
                curl -SLOJ https://ftp.gnu.org/gnu/binutils/binutils-$BINUTILS_VERSION.tar.xz
                curl -SLOJ https://ftp.gnu.org/gnu/gcc/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.xz
                curl -SLOJ https://ftp.gnu.org/gnu/gdb/gdb-$GDB_VERSION.tar.xz
                tar -xf binutils-$BINUTILS_VERSION.tar.xz
                tar -xf gcc-$GCC_VERSION.tar.xz
                tar -xf gdb-$GDB_VERSION.tar.xz
        -   name: Prepare output directory
            run: |
                mkdir -p $PREFIX
        -   name: Build Binutils
            run: |
                mkdir -p $GITHUB_WORKSPACE/build_binutils
                cd $GITHUB_WORKSPACE/build_binutils
                ../binutils-$BINUTILS_VERSION/configure --target=$TARGET --prefix=$GITHUB_WORKSPACE/$ARTIFACT --with-sysroot --disable-nls --disable-werror
                make -j`nproc`
                make -j`nproc` install
        -   name: Build GCC
            run: |
                mkdir -p $GITHUB_WORKSPACE/build_gcc
                cd $GITHUB_WORKSPACE/build_gcc
                ../gcc-$GCC_VERSION/configure --target=$TARGET --prefix=$GITHUB_WORKSPACE/$ARTIFACT --disable-nls --enable-languages=c,c++ --without-headers
                make -j`nproc` all-gcc
                make -j`nproc` install-gcc
        -   name: Build libgcc
            continue-on-error: true
            run: |
                cd $GITHUB_WORKSPACE/build_gcc
                make -j`nproc` all-target-libgcc
                make -j`nproc` install-target-libgcc
        -   name: Build GDB
            run: |
                mkdir -p $GITHUB_WORKSPACE/build_gdb
                cd $GITHUB_WORKSPACE/build_gdb
                ../gdb-$GDB_VERSION/configure --target=$TARGET --prefix=$GITHUB_WORKSPACE/$ARTIFACT --disable-werror
                make -j`nproc`
                make -j`nproc` install
        -   name: Create artifact
            run: |
                cd $GITHUB_WORKSPACE
                tar -cJf $ARTIFACT.tar.xz $ARTIFACT
        -   name: Upload artifact
            uses: actions/upload-artifact@v3
            with:
                name: $ARTIFACT
                path: $GITHUB_WORKSPACE/$ARTIFACT.tar.xz
            